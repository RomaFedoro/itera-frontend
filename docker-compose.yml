version: "3"

services:

  init:
    build:
      context: init
      dockerfile: ./Dockerfile
    environment:
      DB_URL: "${DB_URL}"
    networks:
      - itera_net
    volumes:
      - "./backend/prisma:/app/prisma:ro"
    command:
      - npx --yes prisma migrate deploy
    depends_on:
      database:
        condition: service_healthy

  proxy:
    image: nginx:latest
    ports:
      - "${PROXY_PORT:-80}:80"
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf:ro"
    networks:
      - itera_net
    depends_on:
      - init


  frontend:
    build:
      context: frontend
      dockerfile: ./build/Dockerfile
#    ports:
#      - "${FORWARD_FRONTEND_PORT:-8000}:3000"
    networks:
      - itera_net
    depends_on:
      - proxy

  api:
    build:
      context: backend
      dockerfile: ./build/api/Dockerfile
#    ports:
#      - "${FORWARD_API_PORT:-3000}:3000"
    environment:
      DB_URL: "${DB_URL}"
      TZ: "${TZ:-UTC}"
    networks:
      - itera_net
    depends_on:
      - proxy

  worker:
    build:
      context: backend
      dockerfile: ./build/worker/Dockerfile
    environment:
      DB_URL: "${DB_URL}"
      TZ: "${TZ:-UTC}"
    networks:
      - itera_net
    depends_on:
      - init

  database:
    image: postgres:15
    environment:
      PGPASSWORD: "${DB_PASSWORD:-secret}"
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
    ports:
      - "5432:5432"
    volumes:
      - "itera_vol:/var/lib/postgresql/data"
    networks:
      - itera_net
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
      retries: 3
      timeout: 5s

networks:
  itera_net:
    driver: bridge

volumes:
  itera_vol:
    driver: local
